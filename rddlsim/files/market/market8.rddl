domain market_domain {
  
	requirements = { 
		reward-deterministic,
		partially-observed,
		multivalued
	};
	
	types {
  		posicao_enum : { @vendido, @comprado, @fora };
  		tendencia_passado_enum : { @alta, @baixa, @estavel };
  		tendencia_futuro_enum : { @alta, @baixa, @estavel };
  		observacao_enum : { @ponto_compra, @ponto_venda, @ponto_nada };
  		acao_enum : { @compra, @compra_dupla, @venda, @venda_dupla, @nada };
	};

	pvariables {
		TENDENCIA_PASSADO_PROB(tendencia_passado_enum, tendencia_futuro_enum, tendencia_passado_enum): { non-fluent, real, default = 0.0 };
		TENDENCIA_FUTURO_PROB(tendencia_passado_enum, tendencia_futuro_enum, tendencia_futuro_enum): { non-fluent, real, default = 0.0 };
		posicao_investidor: { state-fluent, posicao_enum, default = @fora };
		tendencia_passado(tendencia_passado_enum, tendencia_futuro_enum, tendencia_passado_enum): { state-fluent, bool, default = false };
		tendencia_futuro(tendencia_passado_enum, tendencia_futuro_enum, tendencia_futuro_enum): { state-fluent, bool, default = false };
		negociar: { action-fluent, acao_enum, default = @fora };
	};
	
	cpfs {
		posicao_investidor' = if (((posicao_investidor == @fora) ^ (negociar == @venda)) |
								 ((posicao_investidor == @comprado) ^ (negociar == @venda_dupla)) |
								 ((posicao_investidor == @vendido) ^ (negociar == @venda)) |
								 ((posicao_investidor == @vendido) ^ (negociar == @venda_dupla)) |
								 ((posicao_investidor == @vendido) ^ (negociar == @nada)) |
								 ((posicao_investidor == @vendido) ^ ~(exists_{?n : acao_enum} negociar == ?n))) then
								 @vendido
							  else if
							     (((posicao_investidor == @fora) ^ (negociar == @compra)) |
								 ((posicao_investidor == @vendido) ^ (negociar == @compra_dupla)) |
								 ((posicao_investidor == @comprado) ^ (negociar == @compra)) |
								 ((posicao_investidor == @comprado) ^ (negociar == @compra_dupla)) |
								 ((posicao_investidor == @comprado) ^ (negociar == @nada)) |
								 ((posicao_investidor == @comprado) ^ ~(exists_{?n : acao_enum} negociar == ?n))) then
								 @comprado
							  else 
								 @fora;
		
		tendencia_passado'(?p, ?f, ?n) = Bernoulli(TENDENCIA_PASSADO_PROB(?p, ?f, ?n));
								  	
		tendencia_futuro'(?p, ?f, ?n) = Bernoulli(TENDENCIA_FUTURO_PROB(?p, ?f, ?n));
	};
  
	reward = 1;
}

non-fluents market_non_fluent {
	domain = market_domain;
  
	non-fluents {
		TENDENCIA_PASSADO_PROB(@alta, @alta, @alta) = 0.780;
	};
}

instance market_instance_01 {
	domain = market_domain;
	non-fluents = market_non_fluent;
	
	init-state {
		posicao_investidor = @fora;
	};

	max-nondef-actions = 1;
	horizon  = 40;
	discount = 1.0;
}
